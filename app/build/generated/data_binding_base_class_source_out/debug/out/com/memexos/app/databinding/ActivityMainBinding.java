// Generated by view binder compiler. Do not edit!
package com.memexos.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebView;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.memexos.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final LinearLayout fabContainer;

  @NonNull
  public final FloatingActionButton fabRecord;

  @NonNull
  public final FloatingActionButton fabSettings;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final FrameLayout progressOverlay;

  @NonNull
  public final TextView progressText;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextInputEditText urlEditText;

  @NonNull
  public final TextInputLayout urlInputLayout;

  @NonNull
  public final WebView webView;

  private ActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull LinearLayout fabContainer,
      @NonNull FloatingActionButton fabRecord, @NonNull FloatingActionButton fabSettings,
      @NonNull ProgressBar progressBar, @NonNull FrameLayout progressOverlay,
      @NonNull TextView progressText, @NonNull Toolbar toolbar,
      @NonNull TextInputEditText urlEditText, @NonNull TextInputLayout urlInputLayout,
      @NonNull WebView webView) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.fabContainer = fabContainer;
    this.fabRecord = fabRecord;
    this.fabSettings = fabSettings;
    this.progressBar = progressBar;
    this.progressOverlay = progressOverlay;
    this.progressText = progressText;
    this.toolbar = toolbar;
    this.urlEditText = urlEditText;
    this.urlInputLayout = urlInputLayout;
    this.webView = webView;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.fabContainer;
      LinearLayout fabContainer = ViewBindings.findChildViewById(rootView, id);
      if (fabContainer == null) {
        break missingId;
      }

      id = R.id.fabRecord;
      FloatingActionButton fabRecord = ViewBindings.findChildViewById(rootView, id);
      if (fabRecord == null) {
        break missingId;
      }

      id = R.id.fabSettings;
      FloatingActionButton fabSettings = ViewBindings.findChildViewById(rootView, id);
      if (fabSettings == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progressOverlay;
      FrameLayout progressOverlay = ViewBindings.findChildViewById(rootView, id);
      if (progressOverlay == null) {
        break missingId;
      }

      id = R.id.progressText;
      TextView progressText = ViewBindings.findChildViewById(rootView, id);
      if (progressText == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.urlEditText;
      TextInputEditText urlEditText = ViewBindings.findChildViewById(rootView, id);
      if (urlEditText == null) {
        break missingId;
      }

      id = R.id.urlInputLayout;
      TextInputLayout urlInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (urlInputLayout == null) {
        break missingId;
      }

      id = R.id.webView;
      WebView webView = ViewBindings.findChildViewById(rootView, id);
      if (webView == null) {
        break missingId;
      }

      return new ActivityMainBinding((CoordinatorLayout) rootView, appBarLayout, fabContainer,
          fabRecord, fabSettings, progressBar, progressOverlay, progressText, toolbar, urlEditText,
          urlInputLayout, webView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
